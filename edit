dasj.css
import React, { useEffect, useState } from "react";
import axios from "axios";
import { User, Package, ShoppingCart, Shield } from "lucide-react";
import Navbar from "./Navbar";
import AnalyticsChart from "./AnalyticsChart";
import "./dashboard.css"; // ← Import your CSS

const Dashboard = () => {
  const [analytics, setAnalytics] = useState({
    users: 0,
    products: 0,
    orders: 0,
    admins: 0,
  });

  const token = localStorage.getItem("jwtToken");

  useEffect(() => {
    const fetchAnalytics = async () => {
      try {
        const response = await axios.get(
          "https://localhost:7162/api/Admin/Analytics",
          {
            headers: {
              Authorization: `Bearer ${token}`,
            },
          }
        );
        setAnalytics(response.data);
      } catch (error) {
        console.error("Failed to fetch analytics:", error);
      }
    };

    fetchAnalytics();
  }, [token]);

  return (
    <div>
      <Navbar />
      <div className="dashboard-wrapper">
        <h1 className="dashboard-title">Admin Dashboard</h1>

        <div className="cards-grid">
          <div className="dashboard-card bg-blue">
            <User size={40} />
            <div>
              <p className="card-label">Users</p>
              <p className="card-value">{analytics.users}</p>
            </div>
          </div>

          <div className="dashboard-card bg-green">
            <Package size={40} />
            <div>
              <p className="card-label">Products</p>
              <p className="card-value">{analytics.products}</p>
            </div>
          </div>

          <div className="dashboard-card bg-yellow">
            <ShoppingCart size={40} />
            <div>
              <p className="card-label">Orders</p>
              <p className="card-value">{analytics.orders}</p>
            </div>
          </div>

          <div className="dashboard-card bg-red">
            <Shield size={40} />
            <div>
              <p className="card-label">Admins</p>
              <p className="card-value">{analytics.admins}</p>
            </div>
          </div>
        </div>

        <AnalyticsChart data={analytics} />
      </div>
    </div>
  );
};

export default Dashboard;
navbar.cds
import React from "react";
import { Link, useNavigate } from "react-router-dom";
import "./navbar.css"; // ← Import custom styles

const Navbar = () => {
  const navigate = useNavigate();

  const handleLogout = () => {
    localStorage.removeItem("token");
    navigate("/login");
  };

  return (
    <nav className="navbar">
      <div className="navbar-title">
        <Link to="/dashboard" className="navbar-link highlight-link">
          Admin Panel
        </Link>
      </div>
      <div className="navbar-links">
        <Link to="/dashboard" className="navbar-link">
          Dashboard
        </Link>
        <Link to="/users" className="navbar-link">
          Users
        </Link>
        <Link to="/products" className="navbar-link">
          Products
        </Link>
        <Link to="/orders" className="navbar-link">
          Orders
        </Link>
        <button onClick={handleLogout} className="logout-button">
          Logout
        </button>
      </div>
    </nav>
  );
};

export default Navbar;
orfer.css
import React, { useEffect, useState } from "react";
import axios from "axios";
import "./orders.css"; // Import your CSS

const OrdersPage = () => {
  const [orders, setOrders] = useState([]);
  const token = localStorage.getItem("jwtToken");

  useEffect(() => {
    const fetchOrders = async () => {
      try {
        const response = await axios.get(
          "https://localhost:7162/api/Admin/GetAllOrders",
          {
            headers: {
              Authorization: `Bearer ${token}`,
            },
          }
        );
        setOrders(response.data);
      } catch (error) {
        console.error("Failed to fetch orders:", error);
      }
    };

    fetchOrders();
  }, [token]);

  return (
    <div className="orders-container">
      <h2 className="orders-title">Orders</h2>
      <div className="table-wrapper">
        <table className="orders-table">
          <thead>
            <tr>
              <th>User ID</th>
              <th>Product ID</th>
              <th>Quantity</th>
              <th>Total Price</th>
              <th>Shipping Address</th>
              <th>Order Status</th>
              <th>Payment Status</th>
            </tr>
          </thead>
          <tbody>
            {orders.map((order, index) => (
              <tr key={index}>
                <td>{order.userID}</td>
                <td>{order.productID}</td>
                <td>{order.quantity}</td>
                <td>₹{order.totalPrice.toFixed(2)}</td>
                <td>{order.shippingAddress}</td>
                <td>{order.orderStatus}</td>
                <td>{order.paymentStatus}</td>
              </tr>
            ))}
            {orders.length === 0 && (
              <tr>
                <td colSpan="7" className="no-orders">
                  No orders available.
                </td>
              </tr>
            )}
          </tbody>
        </table>
      </div>
    </div>
  );
};

export default OrdersPage;
ptof.css
import React, { useEffect, useState } from "react";
import axios from "axios";
import "./products.css"; // Import the CSS

const Products = () => {
  const [products, setProducts] = useState([]);
  const token = localStorage.getItem("jwtToken");

  useEffect(() => {
    const fetchProducts = async () => {
      try {
        const response = await axios.get(
          "https://localhost:7162/api/Admin/GetAllProducts",
          {
            headers: {
              Authorization: `Bearer ${token}`,
            },
          }
        );
        setProducts(response.data);
      } catch (error) {
        console.error("Failed to fetch products:", error);
      }
    };

    fetchProducts();
  }, [token]);

  return (
    <div className="products-container">
      <h2 className="products-title">Products</h2>
      <div className="table-wrapper">
        <table className="products-table">
          <thead>
            <tr>
              <th>Name</th>
              <th>Price</th>
              <th>Category</th>
              <th>Image</th>
            </tr>
          </thead>
          <tbody>
            {products.map((product, index) => (
              <tr key={index}>
                <td>{product.name}</td>
                <td>₹{product.price}</td>
                <td>{product.category}</td>
                <td>
                  <img
                    src={product.imageURL}
                    alt={product.name}
                    className="product-image"
                    onError={(e) => (e.target.style.display = "none")}
                  />
                </td>
              </tr>
            ))}
            {products.length === 0 && (
              <tr>
                <td colSpan="4" className="no-products">
                  No products found.
                </td>
              </tr>
            )}
          </tbody>
        </table>
      </div>
    </div>
  );
};

export default Products;
isers.xss
import React, { useEffect, useState } from "react";
import axios from "axios";
import "./users.css"; // Import the CSS file

const UsersPage = () => {
  const [users, setUsers] = useState([]);
  const token = localStorage.getItem("jwtToken");

  useEffect(() => {
    const fetchUsers = async () => {
      try {
        const response = await axios.get(
          "https://localhost:7162/api/Admin/GetAllUsers",
          {
            headers: {
              Authorization: `Bearer ${token}`,
            },
          }
        );
        setUsers(response.data);
      } catch (error) {
        console.error("Failed to fetch users:", error);
      }
    };

    fetchUsers();
  }, [token]);

  return (
    <div className="users-container">
      <h2 className="users-title">Users</h2>
      <div className="table-wrapper">
        <table className="users-table">
          <thead>
            <tr>
              <th>Name</th>
              <th>Email</th>
              <th>Password</th>
              <th>Shipping Address</th>
              <th>Payment Details</th>
            </tr>
          </thead>
          <tbody>
            {users.map((user, index) => (
              <tr key={index}>
                <td>{user.name}</td>
                <td>{user.email}</td>
                <td>{user.password}</td>
                <td>{user.shippingAddress}</td>
                <td>{user.paymentDetails}</td>
              </tr>
            ))}
            {users.length === 0 && (
              <tr>
                <td colSpan="5" className="no-users">
                  No users found.
                </td>
              </tr>
            )}
          </tbody>
        </table>
      </div>
    </div>
  );
};

export default UsersPage;
lpfom.cdd
import React, { useState } from "react";
import { useNavigate } from "react-router-dom";
import "./login.css"; // Link your CSS file

const Login = () => {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const navigate = useNavigate();

  const handleLogin = async (e) => {
    e.preventDefault();
    const response = await fetch(
      "https://localhost:7162/api/Auth/Admin Login",
      {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ email, password }),
      }
    );
    if (response.ok) {
      const data = await response.json();
      localStorage.setItem("jwtToken", data.token);
      navigate("/dashboard");
    } else {
      alert("Login failed!");
    }
  };

  return (
    <div className="login-container">
      <form onSubmit={handleLogin} className="login-form">
        <h2>Admin Login</h2>
        <input
          type="email"
          placeholder="Email"
          value={email}
          onChange={(e) => setEmail(e.target.value)}
          required
          className="login-input"
        />
        <input
          type="password"
          placeholder="Password"
          value={password}
          onChange={(e) => setPassword(e.target.value)}
          required
          className="login-input"
        />
        <button type="submit" className="login-button">
          Login
        </button>
      </form>
    </div>
  );
};

export default Login;
