import React, { useEffect, useState } from "react";
import { useNavigate } from "react-router-dom";
import "../../styles/productManagement.css";

const Products = () => {
  const navigate = useNavigate();
  const [products, setProducts] = useState([]);

  useEffect(() => {
    fetchProducts();
  }, []);

  const fetchProducts = async () => {
    try {
      const token = localStorage.getItem("jwtToken");
      const response = await fetch(
        "https://localhost:7162/api/Admin/Get_All_Products",
        {
          headers: {
            Authorization: `Bearer ${token}`,
          },
        }
      );

      if (response.ok) {
        const data = await response.json();
        setProducts(data);
      } else {
        console.error("Error fetching products");
      }
    } catch (error) {
      console.error("Error fetching products:", error);
    }
  };

  const handleDelete = async (productId) => {
    try {
      const token = localStorage.getItem("jwtToken");
      const response = await fetch(
        `https://localhost:7162/api/ProductManagement/Delete_Product/${productId}`,
        {
          method: "DELETE",
          headers: {
            Authorization: `Bearer ${token}`,
          },
        }
      );

      if (response.ok) {
        fetchProducts();
      } else {
        console.error("Error deleting product");
      }
    } catch (error) {
      console.error("Error deleting product:", error);
    }
  };

  return (
    <div className="product-page-container">
      <div className="products-header">
        <h2 className="products-title">Products</h2>
        <button
          onClick={() => navigate("/add-product")}
          className="add-product-button"
        >
          + Add Product
        </button>
      </div>
      <div className="products-card-container">
        {products.map((product) => (
          <div key={product.productId} className="product-card">
            <img src={`${product.imageURL}`} alt={product.name} />

            <h3>{product.name}</h3>
            <p>â‚¹{product.price}</p>
            <p>{product.category}</p>
            <div className="card-buttons">
              <button
                className="edit"
                onClick={() =>
                  navigate("/edit-product", { state: { product } })
                }
              >
                Edit
              </button>
              <button
                className="delete"
                onClick={() => handleDelete(product.productId)}
              >
                Delete
              </button>
            </div>
          </div>
        ))}
      </div>
    </div>
  );
};

export default Products;
import React, { useEffect, useState } from "react";
import { useNavigate } from "react-router-dom";
import "../../styles/productManagement.css";

const EditProduct = () => {
  const navigate = useNavigate();
  const [products, setProducts] = useState([]);
  const [editProduct, setEditProduct] = useState({});

  useEffect(() => {
    fetchProducts();
  }, []);

  const fetchProducts = async () => {
    try {
      const token = localStorage.getItem("jwtToken");
      const response = await fetch(
        "https://localhost:7162/api/Admin/Get_All_Products",
        {
          headers: {
            Authorization: `Bearer ${token}`,
          },
        }
      );

      if (response.ok) {
        const data = await response.json();
        setProducts(data);
      } else {
        console.error("Error fetching products");
      }
    } catch (error) {
      console.error("Error fetching products:", error);
    }
  };

  const handleUpdate = async () => {
    try {
      const token = localStorage.getItem("jwtToken");
      const response = await fetch(
        `https://localhost:7162/api/ProductManagement/Edit_Product/${editProduct.productID}`,
        {
          method: "PATCH",
          headers: {
            "Content-Type": "application/json",
            Authorization: `Bearer ${token}`,
          },
          body: JSON.stringify(editProduct),
        }
      );

      if (response.ok) {
        setEditProduct(null);
        fetchProducts();
      } else {
        console.error("Error updating product");
      }
    } catch (error) {
      console.error("Error updating product:", error);
    }
  };
  return (
    <div>
      <h1>Edit Page</h1>
      {editProduct ? (
        <>
          <input
            type="text"
            placeholder="Name"
            value={editProduct.name || ""}
            onChange={(e) =>
              setEditProduct({ ...editProduct, name: e.target.value })
            }
          />
          <input
            type="text"
            placeholder="Price"
            value={editProduct.price || ""}
            onChange={(e) =>
              setEditProduct({ ...editProduct, price: e.target.value })
            }
          />
          <input
            type="text"
            placeholder="Category"
            value={editProduct.category || ""}
            onChange={(e) =>
              setEditProduct({ ...editProduct, category: e.target.value })
            }
          />
          <input
            type="text"
            placeholder="Image URL"
            value={editProduct.imageURL || ""}
            onChange={(e) =>
              setEditProduct({ ...editProduct, imageURL: e.target.value })
            }
          />
          <div className="button-group">
            <button onClick={handleUpdate}>Update</button>
            <button onClick={() => navigate("/edit-product")}>Cancel</button>
          </div>
        </>
      ) : (
        <p>Loading product details...</p>
      )}
    </div>
  );
};

export default EditProduct;
