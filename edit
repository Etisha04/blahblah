
        [HttpGet("Your_Orders")]
        public async Task<IActionResult> GetOrdersByUserId()
        {
            try
            {
                // Get the current user's ID from the claims
                var currentUserId = User.FindFirstValue(ClaimTypes.NameIdentifier);
                if (currentUserId == null)
                {
                    return Unauthorized("User ID not found.");
                }
                var userId = int.Parse(currentUserId);
                var orders = await _orderManagementRepository.GetAllOrdersAsync();
                var userOrders = orders.Where(o => o.UserID == userId).ToList();
                if (!userOrders.Any())
                {
                    return NotFound($"No orders found for User ID {userId}.");
                }
                var orderDTOs = _mapper.Map<IEnumerable<OrderManagementDTO>>(userOrders);
                return Ok(orderDTOs);
            }
            catch (Exception ex)
            {
                return StatusCode(500, "Internal server error");
            }
        }
